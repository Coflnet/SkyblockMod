
// For those who want the bleeding edge
buildscript {
    repositories {
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
        mavenCentral()
        maven { url = "https://maven.minecraftforge.net/" }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath 'com.github.asbyth:ForgeGradle:6f53277'
    }
}
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.minecraftforge.gradle.forge'


version = "1.0"
group= "de.torui.coflmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "CoflMod"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_22"
    //makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    shade
    compile.extendsFrom(shade)
}
dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
	//inJar 'javax.websocket:javax.websocket-api:1.1'

	shade 'com.neovisionaries:nv-websocket-client:2.14'
	//compile 'com.neovisionaries:nv-websocket-client:2.14'
	//shade 'org.java-websocket:Java-WebSocket:1.5.2'
	//shade fileTree(dir: '.', include: ['Java-WebSocket-1.5.3-SNAPSHOT.jar'])
	//shade fileTree(dir: '.', include: ['nv-websocket-client-2.14.jar'])
}

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "	version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }	
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}



shadowJar {
    version = 1.0
    configurations = [project.configurations.shade]
}

reobf { shadowJar { mappingType = "SEARGE" } }
tasks.reobfJar.dependsOn(shadowJar)
